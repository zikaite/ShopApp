// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopApp.Data;

namespace ShopApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211227151758_updating-itemsList")]
    partial class updatingitemsList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpiryDate = new DateTime(2021, 12, 27, 15, 17, 58, 362, DateTimeKind.Utc).AddTicks(9825),
                            Name = "Obuoliai",
                            ShopId = 2
                        },
                        new
                        {
                            Id = 2,
                            ExpiryDate = new DateTime(2021, 12, 27, 15, 17, 58, 363, DateTimeKind.Utc).AddTicks(35),
                            Name = "Sviestas",
                            ShopId = 1
                        },
                        new
                        {
                            Id = 3,
                            ExpiryDate = new DateTime(2021, 12, 27, 15, 17, 58, 363, DateTimeKind.Utc).AddTicks(37),
                            Name = "Miltai",
                            ShopId = 1
                        },
                        new
                        {
                            Id = 4,
                            ExpiryDate = new DateTime(2021, 12, 27, 15, 17, 58, 363, DateTimeKind.Utc).AddTicks(39),
                            Name = "Kiausiniai",
                            ShopId = 1
                        },
                        new
                        {
                            Id = 5,
                            ExpiryDate = new DateTime(2021, 12, 27, 15, 17, 58, 363, DateTimeKind.Utc).AddTicks(41),
                            Name = "Cinamonas",
                            ShopId = 2
                        });
                });

            modelBuilder.Entity("ShopApp.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Maxima"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lidl"
                        });
                });

            modelBuilder.Entity("ShopApp.Models.Item", b =>
                {
                    b.HasOne("ShopApp.Models.Shop", null)
                        .WithMany("Items")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopApp.Models.Shop", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
